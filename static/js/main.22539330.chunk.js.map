{"version":3,"sources":["img/avatorSerg.jpg","img/avatorAndr.jpg","img/avatorIlyay.jpg","actions.jsx","Store.jsx","components/HeaderLink.jsx","components/changeLanguage.jsx","components/Header.jsx","components/PhotographerVideo.jsx","components/Photographer.jsx","components/Home.jsx","components/Photographers.jsx","components/Searchbar.jsx","components/PhotographerList.jsx","components/PhotographerInfo.jsx","components/App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","__webpack_require__","p","actions","Reflux","createActions","Store","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","photographersListAll","isLoaded","keys","language","searchedPhotoghrapher","input","homeTranslations","homeIsLoaded","listenables","_this2","fetch","then","res","json","data","map","flat","setState","_this3","e","target","textContent","value","_this4","preventDefault","_this$state","item","key","toString","includes","toLowerCase","_this5","HeaderLink","_ref","children","rest","objectWithoutProperties","react_default","a","createElement","NavLink","assign","activeClassName","ChangeLanguage","type","className","onClick","onChangeLanguage","title","Header","store","storeKeys","homeLink","photographersLink","href","rel","id","components_HeaderLink","exact","to","changeLanguage","Component","withRouter","PhotographerVideo","video","react_bigpicture_default","src","concat","alt","translatedPoints","bel","dateOfBirth","placeOfBirth","dateOfDeath","almaMater","typeOfActivity","biography","eng","rus","Photographer","Fragment","info","name","media","photo","day","components_PhotographerVideo","Home","dayOfWeek","Date","getDay","getData","getTranslations","description","team","photographerOfDay","first","second","components_Photographer","avatorAndr","avatarSburnt","avatorIlyay","Photographers","photographer","console","log","index","Link","Searchbar","lastName","button","onSubmit","handleSubmit","placeholder","onChange","changeInput","PhotographerList","components_Searchbar","components_Photographers","PhotographerInfo","getDataFromRouter","match","params","App","BrowserRouter","components_Header","Switch","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22539330.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatorSerg.1346e562.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatorAndr.bc4e9dd0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatorIlyay.98257a77.jpg\";","import Reflux from 'reflux';\r\n\r\nconst actions = Reflux.createActions([\r\n  'getData',\r\n  'changeLanguage',\r\n  'getDataFromRouter',\r\n  'changeInput',\r\n  'handleSubmit',\r\n  'getTranslations',\r\n]);\r\n\r\nexport default actions;\r\n","import Reflux from 'reflux';\r\n\r\nimport actions from './actions';\r\n\r\nclass Store extends Reflux.Store {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      photographersListAll: [],\r\n      isLoaded: '',\r\n      keys: [],\r\n      language: 'bel',\r\n      searchedPhotoghrapher: '',\r\n      input: '',\r\n      homeTranslations: [],\r\n      homeIsLoaded: '',\r\n    };\r\n    this.listenables = actions;\r\n  }\r\n\r\n  onGetData() {\r\n    fetch('https://andreisavelyev.github.io/codejam-group34/data.json')\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        const keys = data.map(Object.keys).flat();\r\n        this.setState({ photographersListAll: data, keys, isLoaded: true });\r\n      });\r\n  }\r\n\r\n  onGetDataFromRouter() {\r\n    fetch('https://andreisavelyev.github.io/codejam-group34/home-data.json')\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        const keys = data.map(Object.keys).flat();\r\n        this.setState({ photographersListAll: data, keys, isLoaded: true });\r\n      });\r\n  }\r\n\r\n  onChangeLanguage(e) {\r\n    this.setState({\r\n      language: e.target.textContent,\r\n    });\r\n  }\r\n\r\n  onChangeInput(e) {\r\n    this.setState({\r\n      input: e.target.value,\r\n    });\r\n  }\r\n\r\n  onHandleSubmit(e) {\r\n    e.preventDefault();\r\n    const { input, photographersListAll } = this.state;\r\n    photographersListAll.map((item) => {\r\n      const key = Object.keys(item).toString();\r\n      if (key.includes(input.toLowerCase())) {\r\n        this.setState({\r\n          searchedPhotoghrapher: item[key],\r\n        });\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  onGetTranslations() {\r\n    fetch('home-data.json')\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({ homeTranslations: data, homeIsLoaded: true });\r\n      });\r\n  }\r\n}\r\n\r\nexport default Store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction HeaderLink({ children, ...rest }) {\r\n  return (\r\n    <NavLink activeClassName='nav--active' {...rest}>\r\n      {children}\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nexport default HeaderLink;\r\n","import React from 'react';\r\nimport '../css/Header.css';\r\n\r\nfunction ChangeLanguage(props) {\r\n  return (\r\n    <button type='button' className='btnOnChangeLanguage' onClick={props.onChangeLanguage}>{props.title}</button>\r\n  );\r\n}\r\n\r\nexport default ChangeLanguage;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Reflux from 'reflux';\r\nimport Store from '../Store';\r\n\r\nimport HeaderLink from './HeaderLink';\r\nimport '../css/Header.css';\r\nimport ChangeLanguage from './changeLanguage';\r\n\r\nclass Header extends Reflux.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.store = Store;\r\n    this.storeKeys = ['language'];\r\n  }\r\n\r\n  render() {\r\n    const arr = ['bel', 'rus', 'eng'];\r\n    const { language } = this.state;\r\n    const title = language === 'bel' ? 'Фатографы Беларусi' : language === 'rus' ? 'Фотографы Беларуси' : 'Photographers of Belarus';\r\n    const homeLink = language === 'bel' ? 'Дахаты' : language === 'rus' ? 'Домой' : 'Home';\r\n    const photographersLink = language === 'bel' ? 'Фатографы' : language === 'rus' ? 'Фотографы' : 'Photographers';\r\n    return (\r\n      <header className='header'>\r\n        <section>\r\n          <a href='#id' target='_blank' rel='noopener noreferrer'>\r\n            <h1 className='header-logo' id='logo'>{title}</h1>\r\n          </a>\r\n        </section>\r\n        <section>\r\n          <nav className='header-nav'>\r\n            <HeaderLink exact to='/' className='header-nav-tab'>{homeLink}</HeaderLink>\r\n            <HeaderLink to='/photographers' className='header-nav-tab'>{photographersLink}</HeaderLink>\r\n          </nav>\r\n        </section>\r\n        <section>\r\n          {arr.map(item => (\r\n            <ChangeLanguage\r\n              onChangeLanguage={this.props.onChangeLanguage}\r\n              title={item}\r\n              key={item}\r\n            />\r\n          ))}\r\n        </section>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\nimport BigPicture from 'react-bigpicture';\r\n\r\nfunction PhotographerVideo({ video }) {\r\n  return (\r\n    <BigPicture\r\n      type='youtube'\r\n      src={`https://www.youtube.com/watch?v=${video}`}\r\n    >\r\n      <img\r\n        className='director-video'\r\n        src={`https://img.youtube.com/vi/${video}/hqdefault.jpg`}\r\n        alt='video'\r\n      />\r\n    </BigPicture>\r\n  );\r\n}\r\n\r\nexport default PhotographerVideo;\r\n","/* eslint-disable react/destructuring-assignment */\r\nimport React from 'react';\r\n\r\nimport '../css/Home.css';\r\nimport PhotographerVideo from './PhotographerVideo';\r\n\r\nconst translatedPoints = {\r\n  bel: {\r\n    dateOfBirth: 'Дата нараджэння: ',\r\n    placeOfBirth: 'Месца нараджэння: ',\r\n    dateOfDeath: 'Дата смерці: ',\r\n    almaMater: 'Альма-матар: ',\r\n    typeOfActivity: 'Род дзейнасці: ',\r\n    biography: 'Біяграфія: ',\r\n  },\r\n  eng: {\r\n    dateOfBirth: 'Born: ',\r\n    placeOfBirth: 'Place of Birth: ',\r\n    dateOfDeath: 'Died: ',\r\n    almaMater: 'Alma-mater: ',\r\n    typeOfActivity: 'Occupation: ',\r\n    biography: 'Biography: ',\r\n  },\r\n  rus: {\r\n    dateOfBirth: 'Дата рождения: ',\r\n    placeOfBirth: 'Место рождения: ',\r\n    dateOfDeath: 'Дата смерти: ',\r\n    almaMater: 'Альма-матер: ',\r\n    typeOfActivity: 'Род деятельности: ',\r\n    biography: 'Биография: ',\r\n  },\r\n};\r\n\r\nfunction Photographer(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className='ph-name'>{ props.info.name }</h2>\r\n      <img className='ph-img' src={props.media.photo} alt='Foto Photographer' />\r\n      <p>\r\n        <span className='ph-info'>\r\n          { translatedPoints[props.language].dateOfBirth }\r\n        </span>\r\n        {props.info.dateOfBirth}\r\n      </p>\r\n      <p>\r\n        <span className='ph-info'>\r\n          { translatedPoints[props.language].placeOfBirth }\r\n        </span>\r\n        {props.info.placeOfBirth}\r\n      </p>\r\n      <p>\r\n        <span className='ph-info'>\r\n          { translatedPoints[props.language].dateOfDeath }\r\n        </span>\r\n        {props.info.dateOfDeath}\r\n      </p>\r\n      <p>\r\n        <span className='ph-info'>\r\n          { translatedPoints[props.language].almaMater }\r\n        </span>\r\n        {props.info.almaMater}\r\n      </p>\r\n      <p>\r\n        <span className='ph-info'>\r\n          { translatedPoints[props.language].typeOfActivity }\r\n        </span>\r\n        {props.info.typeOfActivity}\r\n      </p>\r\n      <h2 className='ph-info'>{ translatedPoints[props.language].biography }</h2>\r\n      <p>{props.info.biography}</p>\r\n      {!props.day && <PhotographerVideo video={props.media.video} />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Photographer;\r\n","/* eslint-disable max-len */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\nimport React from 'react';\r\nimport Reflux from 'reflux';\r\nimport Store from '../Store';\r\n\r\nimport actions from '../actions';\r\nimport '../css/Home.css';\r\nimport Photographer from './Photographer';\r\nimport avatarSburnt from '../img/avatorSerg.jpg';\r\nimport avatorAndr from '../img/avatorAndr.jpg';\r\nimport avatorIlyay from '../img/avatorIlyay.jpg';\r\n\r\nclass Home extends Reflux.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dayOfWeek: new Date().getDay(),\r\n    };\r\n    this.store = Store;\r\n    this.storeKeys = ['photographersListAll', 'isLoaded', 'keys', 'language', 'homeTranslations', 'homeIsLoaded'];\r\n  }\r\n\r\n  componentDidMount() {\r\n    actions.getData();\r\n    actions.getTranslations();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      keys, isLoaded, photographersListAll, language, dayOfWeek, homeTranslations, homeIsLoaded,\r\n    } = this.state;\r\n    if (!isLoaded || !homeIsLoaded) {\r\n      return <h2>Loading</h2>;\r\n    }\r\n    const info = photographersListAll[dayOfWeek][keys[dayOfWeek]][language];\r\n    const media = photographersListAll[dayOfWeek][keys[dayOfWeek]];\r\n    const description = homeTranslations[0][language];\r\n    const team = language === 'bel' ? 'Каманда праекта' : language === 'rus' ? 'Команда проекта' : 'Project team';\r\n    const photographerOfDay = language === 'bel' ? 'Фатограф дня' : language === 'rus' ? 'Фотограф дня' : 'Photographer of the day';\r\n    return (\r\n      <div className='wrapperHome'>\r\n        <div className='homeAboutSite'>\r\n          <section className='homeAbout'>\r\n            <h3 className='titleName'>{description.title}</h3>\r\n            <p className='descriptionSite'> {description.first} </p>\r\n            <p className='descriptionSite'>{description.second}</p>\r\n          </section>\r\n          <section className='homeFotogDay'>\r\n            <h2 className='titleFotogDay titleName'>{photographerOfDay}</h2>\r\n            <Photographer day={dayOfWeek} language={language} info={info} media={media} />\r\n          </section>\r\n        </div>\r\n        <div>\r\n          <h3 className='titleName'>{team}</h3>\r\n          <div className='projectTeam'>\r\n            <figure className='projectUser'>\r\n              <a href='https://github.com/andreisavelyev' target='_blank' rel='noopener noreferrer'>\r\n                <img className='projectUserAvatar' src={avatorAndr} alt='Avatar andreisavelyev' />\r\n              </a>\r\n              <p className='ph-name'>\r\n                <a href='https://github.com/andreisavelyev' target='_blank' rel='noopener noreferrer'>andreisavelyev</a>\r\n              </p>\r\n              <p className='ph-name'>Andrei Savelyeu</p>\r\n            </figure>\r\n            <figure className='projectUser'>\r\n              <a href='https://github.com/SBurnt' target='_blank' rel='noopener noreferrer'>\r\n                <img className='projectUserAvatar' src={avatarSburnt} alt='Avatar Sburnt' />\r\n              </a>\r\n              <p className='ph-name'>\r\n                <a href='https://github.com/SBurnt' target='_blank' rel='noopener noreferrer'>Sburnt</a>\r\n              </p>\r\n              <p className='ph-name'>Siarhei Pashkevich</p>\r\n            </figure>\r\n            <figure className='projectUser'>\r\n              <a href='https://github.com/ilyay95' target='_blank' rel='noopener noreferrer'>\r\n                <img className='projectUserAvatar' src={avatorIlyay} alt='Avatar ilyay95' />\r\n              </a>\r\n              <p className='ph-name'>\r\n                <a href='https://github.com/ilyay95' target='_blank' rel='noopener noreferrer'>ilyay95</a>\r\n              </p>\r\n              <p className='ph-name'>Ilya Yatsuk</p>\r\n            </figure>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Reflux from 'reflux';\r\nimport actions from '../actions';\r\nimport Store from '../Store';\r\n\r\nimport '../css/PhotographerList.css';\r\n\r\nclass Photographers extends Reflux.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      photographer: [],\r\n    };\r\n\r\n    this.store = Store;\r\n    this.storeKeys = ['photographersListAll', 'isLoaded', 'keys', 'language'];\r\n  }\r\n\r\n  componentDidMount() {\r\n    actions.getData();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      photographersListAll, isLoaded, keys, language,\r\n    } = this.state;\r\n\r\n    console.log('props Photographers', photographersListAll);\r\n\r\n    if (isLoaded) {\r\n      return (\r\n        <div className='wrapperPhotographerList'>\r\n          { photographersListAll.map((item, index) => (\r\n            <div className='itemFotogr'>\r\n              <div className='imgPhotographerListBlock'>\r\n                <img className='imgPhotographerList' src={item[keys[index]].photo} alt='foto' />\r\n              </div>\r\n              <div>\r\n                <div className='namePhotographerList'>\r\n                  <Link to={`/photographers/${index}`} key={`link${index}`}>\r\n                    { item[keys[index]][language].name }\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <p className='typeOfActivityPhotographerList'>\r\n                    {item[keys[index]][language].typeOfActivity}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )) }\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <p>loading...</p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Photographers;\r\n","import React from 'react';\r\nimport Reflux from 'reflux';\r\nimport actions from '../actions';\r\nimport Store from '../Store';\r\n\r\nimport '../css/PhotographerList.css';\r\n\r\nclass Searchbar extends Reflux.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.store = Store;\r\n    this.storeKeys = ['photographersListAll', 'isLoaded', 'keys', 'language', 'input', 'searchedPhotographer'];\r\n  }\r\n\r\n  render() {\r\n    const { language, isLoaded } = this.state;\r\n    if (isLoaded) {\r\n      const lastName = language === 'bel' ? 'Прозвішча' : language === 'rus' ? 'Фамилия' : 'Last name';\r\n      const button = language === 'bel' ? 'Шукаць' : language === 'rus' ? 'Искать' : 'Search'; \r\n      return (\r\n        <form className='formSearchForogr' onSubmit={actions.handleSubmit}>\r\n          <input className='inputSearchForogr' type='text' value={this.state.input} placeholder={lastName} onChange={actions.changeInput} />\r\n          <button className='btnSearchForogr' type='submit'>{button}</button>\r\n        </form>\r\n      );\r\n    }\r\n    return (\r\n      <p>Loading...</p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport Reflux from 'reflux';\r\nimport actions from '../actions';\r\nimport Store from '../Store';\r\nimport Photographers from './Photographers';\r\nimport Searchbar from './Searchbar';\r\nimport Photographer from './Photographer';\r\n\r\n\r\nclass PhotographerList extends Reflux.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.store = Store;\r\n    this.storeKeys = ['photographersListAll', 'isLoaded', 'language', 'searchedPhotoghrapher'];\r\n  }\r\n\r\n  render() {\r\n    const { language, searchedPhotoghrapher } = this.state;\r\n    const info = searchedPhotoghrapher[language];\r\n    const media = searchedPhotoghrapher;\r\n    if (searchedPhotoghrapher) {\r\n      return (\r\n        <React.Fragment>\r\n          <Searchbar />\r\n          <Photographers />\r\n          <Photographer language={language} info={info} media={media} />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Searchbar />\r\n        <Photographers />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhotographerList;\r\n","import React from 'react';\r\nimport Reflux from 'reflux';\r\nimport actions from '../actions';\r\nimport Store from '../Store';\r\nimport Photographer from './Photographer';\r\n\r\nclass PhotographerInfo extends Reflux.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      photographer: [],\r\n    };\r\n\r\n    this.store = Store;\r\n    this.storeKeys = ['photographersListAll', 'isLoaded', 'keys', 'language'];\r\n  }\r\n\r\n  componentDidMount() {\r\n    actions.getDataFromRouter();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      photographersListAll, isLoaded, keys, language,\r\n    } = this.state;\r\n\r\n    if (isLoaded) {\r\n      const id = this.props.match.params.photographer;\r\n      const info = photographersListAll[id][keys[id]][language];\r\n      const media = photographersListAll[id][keys[id]];\r\n      return (\r\n        <Photographer language={language} info={info} media={media} />\r\n      );\r\n    }\r\n    return <p>Loading</p>;\r\n  }\r\n}\r\n\r\nexport default PhotographerInfo;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Reflux from 'reflux';\r\nimport actions from '../actions';\r\nimport Store from '../Store';\r\nimport '../css/App.css';\r\n\r\nimport Header from './Header';\r\nimport Home from './Home';\r\nimport PhotographerList from './PhotographerList';\r\nimport PhotographerInfo from './PhotographerInfo';\r\n\r\nclass App extends Reflux.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.store = Store;\r\n    this.storeKeys = ['language'];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Header onChangeLanguage={actions.changeLanguage} />\r\n          <main className='main'>\r\n            <Switch>\r\n              <Route exact path='/' component={Home} />\r\n              <Route exact path='/photographers' component={PhotographerList} />\r\n              <Route path='/photographers/:photographer' component={PhotographerInfo} />\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/reset.css';\r\nimport './css/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n"],"sourceRoot":""}